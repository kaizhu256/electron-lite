{"/home/travis/build/kaizhu256/node-electron-lite/test.js":"/* istanbul instrument in package electron */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 4,\n    maxlen: 100,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = require('utility2').requireReadme();\n        local.global.local = local;\n        // init test\n        local.testRunInit(local);\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run node js-env code - function\n    case 'node':\n        local.testCase_buildApidoc_default = function (options, onError) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { moduleDict: { electron: require('electron') } };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = function (options, onError) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorDefault);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            onError(null, options);\n        };\n\n        local.testCase_buildLib_default = function (options, onError) {\n        /*\n         * this function will test buildLib's default handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        local.testCase_buildTest_default = function (options, onError) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            onError(null, options);\n        };\n\n        local.testCase_exampleJs_exit = function (options, onError) {\n        /*\n         * this function will test example.js's exit handling-behavior\n         */\n            process.exit = function () {\n                onError(null, options);\n            };\n        };\n\n        local.testCase_webpage_default = function (options, onError) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            onError(null, options);\n        };\n        break;\n    }\n}());\n","/home/travis/build/kaizhu256/node-electron-lite/example.js":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nexample.js\n\nthis electron script will screenshot the webpage https://electron.atom.io\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install electron-lite && \\\n            printf '{\"main\":\"example.js\",\"name\":\"undefined\",\"version\":\"0.0.1\"}' > \\\n            package.json && \\\n            ./node_modules/.bin/electron . --disable-overlay-scrollbar --enable-logging\n    3. view screenshot /tmp/screenshot.testExampleJs.browser..png\n*/\n\n/* istanbul instrument in package electron */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 4,\n    maxlen: 100,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var options, modeNext, onNext;\n    onNext = function (data) {\n        modeNext += 1;\n        switch (modeNext) {\n        case 1:\n            /* istanbul ignore next */\n            if (process.env.npm_config_mode_auto_restart) {\n                return;\n            }\n            // wait for electron to init\n            require('electron').app.once('ready', onNext);\n            break;\n        case 2:\n            // init options\n            options = { frame: false, height: 768, width: 1024, x: 0, y: 0 };\n            // init browserWindow;\n            options.BrowserWindow = require('electron').BrowserWindow;\n            options.browserWindow = new options.BrowserWindow(options);\n            // goto next step when webpage is loaded\n            options.browserWindow.webContents.once('did-stop-loading', onNext);\n            // open url\n            options.browserWindow.loadURL('https://electron.atom.io');\n            break;\n        case 3:\n            // screenshot webpage\n            options.browserWindow.capturePage(options, onNext);\n            break;\n        case 4:\n            // screenshot\n            require('fs').writeFileSync(\n                '/tmp/screenshot.testExampleJs.browser..png',\n                data.toPng()\n            );\n            console.log('created screenshot file /tmp/screenshot.testExampleJs.browser..png');\n            // exit\n            process.exit(0);\n            break;\n        }\n    };\n    modeNext = 0;\n    onNext();\n}());"}